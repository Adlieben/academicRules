% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simulate_policy_change.R
\name{simulate_policy_change}
\alias{simulate_policy_change}
\title{Simulate policy changes to academic rules and compare outcomes}
\usage{
simulate_policy_change(
  data,
  ruleset,
  modifications = list(),
  outcome_col_name = "OUTCOME_CHANGED"
)
}
\arguments{
\item{data}{A data frame or tibble containing student data.}

\item{ruleset}{An object of class "academic_ruleset".}

\item{modifications}{A named list indicating which rules to modify and how,
e.g. \code{list(min_total = list(value = 26))} to change the min_total threshold to 26.}

\item{outcome_col_name}{Character. Name of classification column for new outcomes.}
}
\value{
A data frame with both old and new outcomes or a summary of changes in pass/fail rates.
}
\description{
Temporarily adjusts rules or thresholds, applies them to the dataset, and
compares outcomes against a baseline.
}
\examples{
df <- data.frame(
  student_id = 1:5,
  total_score = c(26, 23, 30, 10, 29),
  fail_count = c(0, 1, 2, 3, 1),
  essay_grade = c(3, 2, 1, 0, 4)
)
my_rules <- define_rule_set(
  list(
    "fail_too_many" = list(type = "threshold", value = 2, dimension = "fail_count"),
    "min_total" = list(type = "threshold", value = 24, dimension = "total_score")
  )
)

baseline <- apply_rules(df, my_rules, outcome_col_name = "OUTCOME_BASE")

# Increase min_total from 24 to 26
changed <- simulate_policy_change(
  data = df,
  ruleset = my_rules,
  modifications = list(min_total = list(value = 26)),
  outcome_col_name = "OUTCOME_NEW"
)

# Compare pass/fail changes
table(baseline$OUTCOME_BASE, changed$OUTCOME_NEW)
}
